<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:View="clr-namespace:DianaLLK_GUI.View"
    xmlns:local="clr-namespace:DianaLLK_GUI">

    <Style TargetType="{x:Type View:LLKTokenRound}">
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type View:LLKTokenRound}">
                    <Viewbox>
                        <Grid>
                            <Border x:Name="HitArea" Background="#ffffff" Opacity="0" CornerRadius="15"/>
                            <Border x:Name="FlickLight" Background="#ffffff" Margin="5" Opacity="0" CornerRadius="15"/>
                            <Border x:Name="HoveredHightliter" Opacity="{Binding HoveredHightliterOpacity, RelativeSource={RelativeSource TemplatedParent}}" Background="{StaticResource TextTheme}" Margin="5" CornerRadius="15"/>
                            <Border x:Name="SelectedHighlighter" Opacity="{Binding SelectedHighlighterOpacity,RelativeSource={RelativeSource TemplatedParent}}" Background="{StaticResource TextTheme}" Margin="5" CornerRadius="15"/>
                            <Rectangle x:Name="FakeShadow" Width="100" Height="100" RadiusX="15" RadiusY="15" Margin="2,3,0,0" Fill="Black" Opacity="0.60"/>
                            <Rectangle x:Name="Content" Margin="10" Width="100" Height="100" RadiusX="15" RadiusY="15" StrokeThickness="3" Stretch="Uniform"
                                     Stroke="{Binding Token.TokenType,RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource LLKTokenTypeToColorFrame}}" 
                                     Fill="{Binding Token.TokenType,RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource LLKTokenTypeToImage}}" />
                        </Grid>
                    </Viewbox>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Token.TokenType,RelativeSource={RelativeSource Self}}" Value="None">
                            <Setter TargetName="FlickLight" Property="Opacity" Value="0.50" />
                            <Setter TargetName="FakeShadow"  Property="Opacity" Value="0.01" />
                            <Setter TargetName="FakeShadow"  Property="Fill" Value="White" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type View:SButton}">
        <Setter Property="BorderBrush" Value="Gold" />
        <Setter Property="Margin" Value="15,5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type View:SButton}">
                    <Viewbox>
                        <Rectangle Width="200" Height="100" Fill="{TemplateBinding Background}" RadiusX="15" RadiusY="15"
                                       Stroke="{TemplateBinding BorderBrush}" StrokeThickness="3" Stretch="Fill">
                        </Rectangle>
                    </Viewbox>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="0.65" />
                            <Setter Property="BorderBrush" Value="{StaticResource TextTheme}" />
                        </Trigger>
                        <Trigger Property="Skill" Value="AvaPower">
                            <Setter Property="Background" Value="{StaticResource AVA_SKILL}" />
                        </Trigger>
                        <Trigger Property="Skill" Value="BellaPower">
                            <Setter Property="Background" Value="{StaticResource BELLA_SKILL}" />
                        </Trigger>
                        <Trigger Property="Skill" Value="CarolPower">
                            <Setter Property="Background" Value="{StaticResource CAROL_SKILL}" />
                        </Trigger>
                        <Trigger Property="Skill" Value="DianaPower">
                            <Setter Property="Background" Value="{StaticResource DIANA_SKILL}" />
                        </Trigger>
                        <Trigger Property="Skill" Value="EileenPower">
                            <Setter Property="Background" Value="{StaticResource EILEEN_SKILL}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type View:RSlider}">
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type View:RSlider}">
                    <Grid x:Name="GridRoot">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <!-- TickBar shows the ticks for Slider -->
                        <TickBar Grid.Row="0" Visibility="Collapsed" x:Name="TopTick"
                                    SnapsToDevicePixels="True" Placement="Top" Fill="{TemplateBinding Foreground}"/>
                        <TickBar Visibility="Collapsed" Grid.Row="2" x:Name="BottomTick"
                                 SnapsToDevicePixels="True" Placement="Bottom" Fill="{TemplateBinding Foreground}"/>

                        <Grid Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="40"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Border Grid.Column="0" Margin="5,5,0,5" BorderBrush="{StaticResource TextTheme}" BorderThickness="2,2,0,2"
                                    CornerRadius="5,0,0,5">
                                <Label Content="{TemplateBinding Value}" FontWeight="Bold" Foreground="{StaticResource TextTheme}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Border>
                            <Border Grid.Column="1" x:Name="Border" Margin="0,5,5,5" CornerRadius="0,5,5,0" 
                                    Background="{TemplateBinding Background}" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}"/>
                            <!-- The Track lays out the repeat buttons and thumb -->
                            <Track Grid.Column="1" x:Name="PART_Track" Margin="2,0,6,0">
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Style="{StaticResource GeneralSliderRepeatButton}" Command="Slider.IncreaseLarge"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource GeneralSliderThumb}" Height="20" Width="10"/>
                                </Track.Thumb>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Style="{StaticResource GeneralSliderRepeatButton}" Command="Slider.DecreaseLarge"/>
                                </Track.DecreaseRepeatButton>
                            </Track>
                        </Grid>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TickPlacement" Value="TopLeft">
                            <Setter Property="Visibility" Value="Visible" TargetName="TopTick"/>
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="BottomRight">
                            <Setter Property="Visibility" Value="Visible" TargetName="BottomTick"/>
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="Both">
                            <Setter Property="Visibility" Value="Visible" TargetName="TopTick"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="BottomTick"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="#FFFFFF" TargetName="Border"/>
                            <Setter Property="BorderBrush" Value="#FFFFFF" TargetName="Border"/>
                        </Trigger>

                        <!-- Use a rotation to create a Vertical Slider form the default Horizontal -->
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="LayoutTransform" TargetName="GridRoot">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                            <!-- Track rotates itself based on orientation so need to force it back -->
                            <Setter TargetName="PART_Track" Property="Orientation" Value="Horizontal"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
